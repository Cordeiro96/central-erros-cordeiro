// <auto-generated />
using System;
using CentralErros.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CentralErros.Data.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CentralErros.Domain.Modelo.Aplicacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Aplicacao");
                });

            modelBuilder.Entity("CentralErros.Domain.Modelo.Aviso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<int>("IdTipoLog")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoLog");

                    b.ToTable("Aviso");
                });

            modelBuilder.Entity("CentralErros.Domain.Modelo.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdAplicacao")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<int>("IdTipoLog")
                        .HasColumnType("int");

                    b.HasKey("Id", "IdAplicacao");

                    b.HasIndex("IdAplicacao");

                    b.HasIndex("IdTipoLog");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("CentralErros.Domain.Modelo.TipoLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("TipoLog");
                });

            modelBuilder.Entity("CentralErros.Domain.Modelo.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<short>("Nivel")
                        .HasColumnType("smallint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("CentralErros.Domain.Modelo.UsuarioAplicacao", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdAplicacao")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("IdUsuario", "IdAplicacao");

                    b.HasIndex("IdAplicacao");

                    b.ToTable("UsuarioAplicacao");
                });

            modelBuilder.Entity("CentralErros.Domain.Modelo.UsuarioAviso", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdAviso")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("IdUsuario", "IdAviso");

                    b.HasIndex("IdAviso");

                    b.ToTable("UsuarioAviso");
                });

            modelBuilder.Entity("CentralErros.Domain.Modelo.Aviso", b =>
                {
                    b.HasOne("CentralErros.Domain.Modelo.TipoLog", "TipoLog")
                        .WithMany("Avisos")
                        .HasForeignKey("IdTipoLog")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CentralErros.Domain.Modelo.Log", b =>
                {
                    b.HasOne("CentralErros.Domain.Modelo.Aplicacao", "Aplicacao")
                        .WithMany("Logs")
                        .HasForeignKey("IdAplicacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CentralErros.Domain.Modelo.TipoLog", "TipoLog")
                        .WithMany("Logs")
                        .HasForeignKey("IdTipoLog")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CentralErros.Domain.Modelo.UsuarioAplicacao", b =>
                {
                    b.HasOne("CentralErros.Domain.Modelo.Aplicacao", "Aplicacao")
                        .WithMany("UsuariosAplicacoes")
                        .HasForeignKey("IdAplicacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CentralErros.Domain.Modelo.Usuario", "Usuario")
                        .WithMany("UsuariosAplicacoes")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CentralErros.Domain.Modelo.UsuarioAviso", b =>
                {
                    b.HasOne("CentralErros.Domain.Modelo.Aviso", "Aviso")
                        .WithMany("UsuariosAvisos")
                        .HasForeignKey("IdAviso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CentralErros.Domain.Modelo.Usuario", "Usuario")
                        .WithMany("UsuariosAvisos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
